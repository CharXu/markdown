// Code generated by protoc-gen-go. DO NOT EDIT.
// source: men.proto

package pbtest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Men struct {
	Gender string  `protobuf:"bytes,1,opt,name=Gender" json:"Gender,omitempty"`
	Height float64 `protobuf:"fixed64,2,opt,name=Height" json:"Height,omitempty"`
	Weight float64 `protobuf:"fixed64,3,opt,name=Weight" json:"Weight,omitempty"`
	Age    int32   `protobuf:"varint,4,opt,name=Age" json:"Age,omitempty"`
}

func (m *Men) Reset()                    { *m = Men{} }
func (m *Men) String() string            { return proto.CompactTextString(m) }
func (*Men) ProtoMessage()               {}
func (*Men) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Men) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Men) GetHeight() float64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Men) GetWeight() float64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Men) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func init() {
	proto.RegisterType((*Men)(nil), "pbtest.Men")
}

func init() { proto.RegisterFile("men.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 116 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcc, 0x4d, 0xcd, 0xd3,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2b, 0x48, 0x2a, 0x49, 0x2d, 0x2e, 0x51, 0x8a, 0xe7,
	0x62, 0xf6, 0x4d, 0xcd, 0x13, 0x12, 0xe3, 0x62, 0x73, 0x4f, 0xcd, 0x4b, 0x49, 0x2d, 0x92, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf2, 0x40, 0xe2, 0x1e, 0xa9, 0x99, 0xe9, 0x19, 0x25, 0x12,
	0x4c, 0x0a, 0x8c, 0x1a, 0x8c, 0x41, 0x50, 0x1e, 0x48, 0x3c, 0x1c, 0x22, 0xce, 0x0c, 0x11, 0x87,
	0xf0, 0x84, 0x04, 0xb8, 0x98, 0x1d, 0xd3, 0x53, 0x25, 0x58, 0x14, 0x18, 0x35, 0x58, 0x83, 0x40,
	0xcc, 0x24, 0x36, 0xb0, 0x7d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5a, 0xac, 0xc8, 0xb8,
	0x7c, 0x00, 0x00, 0x00,
}
