syntax = "proto3";

package aladinfun.TripleDream.proto;

import "base.proto";
import "struct.proto";
import "db.proto";
import "user.proto";
import "enum.proto";

message AppUpdateInfo {
    string Version         = 1;
    string VersionManiFest = 2;
    string ProjectManiFest = 3;
    string UpdContent      = 4;
}

message LoginInfo {
    string CgiRoot    = 1;
    uint32 IsSrvDown  = 2; // bool 0 1
    string SrvDownMsg = 3;
}

message HelloReq {
}

message HelloRsp {
    RspHead       Head      = 1;
    AppUpdateInfo AppUpd    = 2;
    LoginInfo     LoginInfo = 3;
}

message UserData {
    string UID                 = 1;
    UserCore Core              = 2;
    UserSocial Social          = 3;
    UserStatis Statis          = 4;
}

message LoginReq {
    LOGIN_TYPE Type    = 1;  // login type
    string AccessToken = 2;
    GENDER_TYPE Gender = 3;
}

message LoginRsp {
    RspHead  Head       = 1;
    UserData UserData   = 2;
    string   EncodeKey  = 3; // md5
    uint32   KeyExpire  = 4; // second
    string   CgiRoot    = 5;
    string   Cookie     = 6;
    UserGameRound Round = 7;
}

message RankReq {
    uint32 Type = 1;
}

message RankRsp {
    RspHead Head           = 1;
    repeated UserSumm List = 2;
}

message FriendListReq {
    uint32 Type = 1;
}

message FriendListRsp {
    RspHead Head           = 1;
    repeated UserSumm List = 2;
}

message OprHistory {
    string ItemID = 1;
    uint32 FromColIndex = 2;
    uint32 FromRowIndex = 3;
    uint32 ToColIndex = 4;
    uint32 ToRowIndex = 5;
}

message SettleRoundReq {
    // client report data
    string RoundUUID = 1;
    repeated OprHistory OprHistorys = 2;
}

message SettleRoundRsp {
    RspHead Head        = 1;
    uint32 NextInitSeed = 2;
    uint32 NextOprSeed  = 3;
    string NextUUID     = 4;
    Prize Prize         = 5;
}

message BuildReq {
    uint32 Index   = 1; // building index
    uint32 ToLevel = 2; // the level build to
}

message BuildRsp {
    RspHead Head      = 1;
    UserIsland Island = 2;
}

// set building status
message SetBDStatusReq {
    uint32 Index = 1;
    uint32 PropID  = 2;
}

message SetBDStatusRsp {
    RspHead Head      = 1;
    UserIsland Island = 2;
}

// look over friend's island
message FriIslandReq {
    uint64 IUID = 1; // uid of island owner
}

message FriIslandRsp {
    RspHead Head           = 1;
    uint32 IslandNo        = 2;
    repeated uint32 BDList = 3;
}

// remove Email field from UserSumm
message IslandFriSumm {
    repeated UserSumm FriSummList = 1;
}

// get self island history list
message IslandMapReq {
}

message IslandMapRsp {
    RspHead Head                         = 1;
    UserIsland Island                    = 2;
    repeated IslandFriSumm IslandFriList = 3;
}

message MsgReq {
    uint32 Type = 1; // message type
}

message MsgRsp {
    RspHead Head          = 1;
    string  Msg           = 2;
    repeated Prize Prizes = 3;
    uint32  MsgTime       = 4; // message send time
}

message BuyReq {
    uint32 MerID = 1; // merchandise ID
}

message BuyRsp {
    RspHead Head          = 1;
    repeated Prize Prizes = 2;
}
